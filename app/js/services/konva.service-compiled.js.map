{"version":3,"sources":["konva.service.js"],"names":[],"mappings":"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","file":"konva.service-compiled.js","sourcesContent":["(function(){\n\n    function KonvaService ($timeout){\n\n        this.item = {};\n        this.draw = false;\n        this.$timeout = $timeout;\n\n    }\n\n    KonvaService.prototype.create = function ($scope, shapes, canvas) {\n\n        debugger\n\n        var _$scope, _this;\n\n        _$scope = $scope;\n        _this = this;\n\n        if (Konva.stages.length > 0) {Konva.stages[0].destroy()}\n\n        var width = window.innerWidth;\n        var height = window.innerHeight;\n\n        var stage = new Konva.Stage({\n            container: 'container',\n            width: width,\n            height: height\n        });\n\n        var layer = new Konva.Layer();\n        var group = new Konva.Group({\n\n            x: canvas.group.x,\n            y: canvas.group.y,\n            draggable: true\n\n        });\n\n        for(var i = 0; i < shapes.length; i++) {\n\n            switch (shapes[i].type) {\n\n                case 'Image':\n                    buildImage(shapes[i]);\n                    break;\n                case 'Rect':\n                    buildRect(shapes[i]);\n                    break;\n                case 'Circle':\n                    buildCircle(shapes[i]);\n                    break;\n                case 'Line':\n                    buildLine(shapes[i]);\n                    break;\n                default:\n                    debugger\n            }\n\n            function buildRect(shape) {\n\n                debugger\n\n                var box = new Konva[shape.type]({\n\n                    x: shape.x,\n                    y: shape.y,\n                    width: shape.width,\n                    height: shape.height,\n                    stroke: shape.stroke,\n                    strokeWidth: shape.strokeWidth,\n                    rotation: shape.rotation,\n                    name: shape.name,\n                    draggable: shape.draggable\n\n                });\n\n                debugger\n\n                box.on('dragend', function (e) {\n\n                    _this.position(_$scope, e, false)\n\n                });\n\n                debugger\n\n                box.on('click', function (e) {\n\n                    _$scope.ctrl.switch(_$scope, 'modal3', true);\n                    _this.item = e;\n                    _this.group = false;\n\n                });\n\n                group.add(box);\n\n            }\n\n            function buildLine(shape) {\n\n                debugger\n\n                var box = new Konva.Line({\n\n                    stroke: shape.stroke,\n                    strokeWidth: shape.strokeWidth,\n                    draggable: shape.draggable,\n                    rotation: shape.rotation,\n                    points: shape.points\n\n                });\n\n                debugger\n\n                box.on('dragend', function (e) {\n\n                    _this.position(_$scope, e, false)\n\n                });\n\n                debugger\n\n                box.on('click', function (e) {\n\n                    _$scope.ctrl.switch(_$scope, 'modal3', true);\n                    _this.item = e;\n                    _this.group = false;\n\n                });\n\n                group.add(box);\n\n            }\n\n            function buildImage(shape) {\n\n                debugger\n\n                var imageObj = new Image();\n\n                imageObj.src = shape.src;\n\n                var box = new Konva.Image({\n\n                    x: shape.x,\n                    y: shape.y,\n                    width: shape.width,\n                    height: shape.height,\n                    draggable: shape.draggable,\n                    rotation: shape.rotation,\n                    name: shape.name,\n                    image: imageObj\n\n                });\n\n                debugger\n\n                box.on('dragend', function (e) {\n\n                    _this.position(_$scope, e, false)\n\n                });\n\n                debugger\n\n                box.on('click', function (e) {\n\n                    _$scope.ctrl.switch(_$scope, 'modal3', true);\n                    _this.item = e;\n                    _this.group = false;\n\n                });\n\n                group.add(box);\n\n            }\n\n            function buildCircle(shape) {\n\n                var box = new Konva.Circle({\n\n                    x: shape.x,\n                    y: shape.y,\n                    stroke: shape.stroke,\n                    strokeWidth: shape.strokeWidth,\n                    draggable: shape.draggable,\n                    rotation: shape.rotation,\n                    radius: shape.radius,\n                    fill: shape.fill\n\n                });\n\n                debugger\n\n                box.on('dragend', function (e) {\n\n                    _this.position(_$scope, e, false)\n\n                });\n\n                debugger\n\n                box.on('click', function (e) {\n\n                    _$scope.ctrl.switch(_$scope, 'modal3', true);\n                    _this.item = e;\n                    _this.group = false;\n\n                });\n\n                group.add(box);\n\n            }\n        }\n\n        group.on('dragend', function(e) {\n\n            _this.position(_$scope, e, true)\n\n        });\n\n        if (this.draw){\n\n            stage.on('contentClick', function(e) {\n\n                _this.createPoint(_$scope, e, stage)\n\n            });\n\n        }\n\n        layer.add(group);\n        stage.add(layer);\n\n        //this.$timeout(function(){\n        //}, 10)\n\n\n    };\n\n    KonvaService.prototype.remove = function ($scope) {\n\n        debugger\n\n        if(!this.group){\n\n            debugger\n\n            $scope.ctrl.floors[$scope.ctrl.current].plan.shapes.splice(this.item.target.index, 1)\n\n        }\n\n        this.update($scope);\n\n    };\n\n    KonvaService.prototype.position = function ($scope, e, group){\n\n        if(group){\n\n            debugger\n\n            $scope.ctrl.floors[$scope.ctrl.current].plan.group.x = e.target.attrs.x;\n            $scope.ctrl.floors[$scope.ctrl.current].plan.group.y = e.target.attrs.y;\n\n        }\n\n        else {\n\n            debugger\n\n            $scope.ctrl.floors[$scope.ctrl.current].plan.shapes[e.target.index].x = e.target.attrs.x;\n            $scope.ctrl.floors[$scope.ctrl.current].plan.shapes[e.target.index].y = e.target.attrs.y;\n\n        }\n\n        this.update($scope);\n\n    };\n\n    KonvaService.prototype.rotation = function ($scope) {\n\n        if(!this.group){\n\n            debugger\n\n            $scope.ctrl.floors[$scope.ctrl.current].plan.shapes[this.item.target.index].rotation = this.item.target.attrs.rotation + 90\n\n        }\n\n        this.update($scope)\n\n    };\n\n    KonvaService.prototype.counter = function ($scope) {\n\n        debugger\n\n        var define = {};\n        define.count = 0;\n        define.points = [];\n\n        for (var ty = 0; ty < $scope.ctrl.floors[$scope.ctrl.current].plan.shapes.length; ty ++) {\n\n            if ($scope.ctrl.floors[$scope.ctrl.current].plan.shapes[ty].name === 'point'){\n\n                debugger\n\n                define.count ++;\n                define.points.push($scope.ctrl.floors[$scope.ctrl.current].plan.shapes[ty].x);\n                define.points.push($scope.ctrl.floors[$scope.ctrl.current].plan.shapes[ty].y);\n\n            }\n        }\n\n        return define;\n\n    };\n\n    KonvaService.prototype.createPoint = function ($scope, e, stage) {\n\n        debugger\n\n        $scope.point.x = stage.pointerPos.x;\n        $scope.point.y = stage.pointerPos.y;\n        $scope.point.radius = 20;\n        $scope.ctrl.add($scope, 'point');\n\n        var define = this.counter($scope);\n\n        if(define.count === 2) {\n\n            for (var nb = 0; nb < $scope.ctrl.floors[$scope.ctrl.current].plan.shapes.length; nb ++) {\n\n                if ($scope.ctrl.floors[$scope.ctrl.current].plan.shapes[nb].name === 'point'){\n\n                    debugger;\n\n                    $scope.ctrl.floors[$scope.ctrl.current].plan.shapes.splice(nb, 1)\n\n                }\n            }\n\n            $scope.line.points = define.points;\n            $scope.ctrl.add($scope, 'line');\n\n        }\n\n    };\n\n    KonvaService.prototype.update = function ($scope) {\n\n        $scope.ctrl.getPromise($scope, 'setData', 'floors', $scope.ctrl.floors, 'floors');\n        $scope.ctrl.update($scope, $scope.ctrl.current)\n\n    };\n\n    angular.module('App')\n        .service('KonvaService',  KonvaService)\n\n}());"]}