{"version":3,"sources":["main.controller.js"],"names":[],"mappings":"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","file":"main.controller-compiled.js","sourcesContent":["(function(){\n\n    function AppCtrl ($scope, $q, KonvaService, StorageService, CANVAS, $timeout){\n\n        this.$scope = $scope;\n        this.$q = $q;\n        this.KonvaService = KonvaService;\n        this.StorageService = StorageService;\n        this.CANVAS = CANVAS;\n        this.$timeout = $timeout;\n\n        this.draggable = false;\n        this.modal = false;\n        this.modal2 = false;\n        this.modal3 = false;\n        this.sideNav = false;\n        this.canvas = {};\n        this.floors = [];\n        this.current = '';\n        this.selection = '';\n        this.aside = '';\n\n        $scope.walls = {};\n        $scope.window = {};\n        $scope.door = {};\n        $scope.column = {};\n        $scope.camera = {};\n        $scope.alarm = {};\n        $scope.sensor = {};\n        $scope.extinguisher = {};\n        $scope.point = {};\n        $scope.line = {};\n        $scope.firstPanel = ['pen', 'window', 'column', 'door'];\n        $scope.secondPanel = ['camera', 'alarm', 'extinguisher', 'sensor'];\n\n        this.getPromise($scope, 'getData', 'floors', undefined, 'floors');\n        this.switch($scope, 'selection', 'floors');\n\n    }\n\n    AppCtrl.prototype.toggle = function ($scope, variable) {\n\n        this[variable] = !this[variable];\n        this.update($scope, this.current)\n\n    };\n\n    AppCtrl.prototype.remove = function ($scope) {\n\n        this.KonvaService.remove($scope)\n\n    };\n\n    AppCtrl.prototype.rotation = function ($scope) {\n\n        this.KonvaService.rotation($scope)\n\n    };\n\n    AppCtrl.prototype.switch = function ($scope, key, value){\n\n        var _this = this;\n\n        switch (value) {\n            case typeof value === \"array\":\n                debugger\n                fillArray(value)\n                break;\n            case value instanceof String || Number:\n                debugger\n                fillString(value)\n                break;\n            default:\n                debugger\n        }\n\n        function fillArray (value){\n\n            for (var toby = 0; toby < value.length; toby ++) {\n\n                if(key === \"modal3\") {\n\n                    _this.$timeout(function(){\n                        $scope.ctrl[key] = value;\n\n                    });\n                }\n            }\n        }\n\n        function fillString (value){\n\n            if(key === \"modal3\") {\n\n                _this.$timeout(function(){\n                    $scope.ctrl[key] = value;\n\n                });\n            }\n\n            debugger\n\n        }\n\n        if(key === \"modal3\") {\n\n            this.$timeout(function(){\n                $scope.ctrl[key] = value;\n\n            });\n        }\n\n        $scope.ctrl[key] = value;\n\n    };\n\n    AppCtrl.prototype.destroy = function () {\n\n        if (Konva.stages.length > 0) {Konva.stages[0].destroy()}\n\n    };\n\n    AppCtrl.prototype.delete = function ($scope, index) {\n\n        this.floors.splice(index, 1);\n        this.getPromise($scope, 'setData', 'floors', this.floors, 'floors', false)\n\n    };\n\n    AppCtrl.prototype.addFloor = function ($scope){\n\n        var floor = {};\n        floor.name  = $scope.floor.name;\n        $scope.floor.name = '';\n        floor.plan = {group: {}, shapes: []};\n        this.floors.push(floor);\n        this.getPromise($scope, 'setData', 'floors', this.floors, 'floors', false)\n\n    };\n\n    AppCtrl.prototype.checkPlan = function ($scope, index) {\n\n        this.switch($scope, 'current', index);\n\n        if(this.floors[this.current].plan.shapes.length > 0){\n\n            this.update($scope, this.current);\n            this.switch($scope, 'sideNav', true);\n            this.switch($scope, 'aside', 'plan');\n            this.switch($scope, 'selection', undefined);\n\n        }\n\n        else {\n\n            this.switch($scope, 'selection', 'plan');\n\n        }\n\n    };\n\n    AppCtrl.prototype.add = function ($scope, name){\n\n        var type, lineX, lineY;\n\n        if(name === 'pen'){\n\n            this.KonvaService.draw = !this.KonvaService.draw;\n\n            console.log(this.KonvaService.draw);\n            this.update($scope, this.current);\n\n            return\n\n        }\n\n        else if(name === 'line'){\n\n            type = 'Line';\n            lineX = $scope[name].points[0];\n            lineY = $scope[name].points[1];\n\n\n        } else if(name === 'walls') {\n\n            type = 'Rect';\n\n        }\n\n        else if (name === 'point'){\n\n            type = 'Circle';\n        }\n\n        else {\n\n            type = 'Image';\n        }\n\n        debugger\n\n\n\n        var shape = this.CANVAS.SHAPE(\n\n            $scope[name].x || lineX,\n            $scope[name].y || lineY,\n            $scope[name].color,\n            this.draggable,\n            $scope[name].width || this.CANVAS.SIZES[name].width || undefined,\n            $scope[name].height || this.CANVAS.SIZES[name].height || undefined,\n            $scope[name].rotation,\n            $scope[name].name = name,\n            $scope[name].radius,\n            $scope[name].type = type,\n            $scope[name].src,\n            $scope[name].stroke || this.CANVAS.SIZES[name].stroke,\n            $scope[name].strokeWidth || this.CANVAS.SIZES[name].strokeWidth,\n            $scope[name].points\n        );\n\n        this.floors[this.current].plan.shapes.push(shape);\n        this.update($scope, this.current);\n        this.getPromise($scope, 'setData', 'floors', this.floors, 'floors');\n\n    };\n\n    AppCtrl.prototype.update = function ($scope, index){\n\n        debugger\n\n        this.current = index;\n\n        var shapes = [];\n        for(var i = 0; i < this.floors[index].plan.shapes.length; i ++){\n\n            debugger\n\n            var src = '../img/' + [this.floors[index].plan.shapes[i].name] + '_top.png';\n\n            debugger\n\n            shapes.push(\n\n                this.CANVAS.SHAPE(\n\n                    this.floors[index].plan.shapes[i].x,\n                    this.floors[index].plan.shapes[i].y,\n                    this.floors[index].plan.shapes[i].color,\n                    this.draggable,\n                    this.floors[index].plan.shapes[i].width,\n                    this.floors[index].plan.shapes[i].height,\n                    this.floors[index].plan.shapes[i].rotation,\n                    this.floors[index].plan.shapes[i].name,\n                    this.floors[index].plan.shapes[i].radius,\n                    this.floors[index].plan.shapes[i].type,\n                    src,\n                    this.floors[index].plan.shapes[i].stroke,\n                    this.floors[index].plan.shapes[i].strokeWidth,\n                    this.floors[index].plan.shapes[i].points\n                ))\n\n        }\n\n        debugger\n\n        this.KonvaService.create($scope, shapes, this.floors[index].plan)\n\n    };\n\n    AppCtrl.prototype.clear = function ($scope) {\n\n        this.floors[this.current].plan.shapes.splice(0);\n        this.getPromise($scope, 'setData', 'floors', this.floors, 'floors', true)\n\n    }\n\n    AppCtrl.prototype.getPromise = function ($scope, storageEvent, storageKey, storageValue, value, update) {\n\n        var promises = {\n\n            Obj: this.StorageService[storageEvent](storageKey, storageValue)\n\n        };\n\n        this.$q.all(promises).then(function (res){\n\n            $scope.ctrl[value] = res.Obj || [];\n\n            if(update) {\n\n                $scope.ctrl.update($scope, $scope.ctrl.current)\n\n            }\n\n            console.log($scope.ctrl[value])\n\n        })\n\n    };\n\n    AppCtrl.$inject = ['$scope', '$q', 'KonvaService', 'StorageService', 'CANVAS', '$timeout'];\n\n    angular.module('App')\n        .controller('AppCtrl',  AppCtrl)\n\n}());"]}